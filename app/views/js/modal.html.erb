<header class="page">
  <div class="patterns"></div>
  <div class="container content">
    <div class="row">
      <div class="span10 offset1">
        <h4>Js- Modal</h4>
      </div>
    </div>
  </div>
</header>
<div class="container container-box">
  <div class="row">
    <div class="span10 offset1">
      <div class="box">
        <p>The Modal's role is to show alert message, with a choice of functions in the control buttons.</p>

        <div class="example">
          <div class="title">
            example
          </div>
          <div class="content">
            <div id="alerts" class="alerts"></div>
            <div id="button" class="m-b-20"></div>
            <p><strong>Configuration Modal</strong></p>
            <div><input type="text" id="your_name" placeholder="your name" /></div>
            <div><input type="text" id="title" placeholder="title modal" /></div>
            <div><input type="text" id="ok_click" placeholder="ok click" /></div>
            <div><input type="text" id="cancel_click" placeholder="cancel click" /></div>
          </div>
          <%= content_for :footer do %>
            <script type="text/javascript">
              jQuery(document).ready(function(){
                var create_modal;
                create_modal = function(){
                  var title, name, ok, cancel;
                  title = jQuery("#title").val() || "Title default";
                  name  = jQuery("#your_name").val() || "Name default";
                  new Lol.Modal({
                    buttons  : 'OK_CANCEL', // OK | OK_CANCEL | CANCEL | YES_NO
                    content  : 'Hello <strong>' + name + '</strong>',
                    close    : false,
                    title    : title,
                    buttonParams: {
                      fn: {
                        OK_CLICK: function(event, obj){
                          new Lol.Alert({
                            message: "Handler ok click, with message: " + jQuery("#ok_click").val()
                          });
                        },
                        CANCEL_CLICK: function(event, obj){
                          new Lol.Alert({
                            type   : "warning",
                            message: "Handler cancel click, with message: " + jQuery("#cancel_click").val()
                          });
                        }
                      }
                    }
                  });
                };
                new Lol.Button({
                  text     : "show modal",
                  container: "#button",
                  callback : {
                    click: function(event, object){
                      create_modal();
                    }
                  }
                });
              });
            </script>
          <% end %>
        </div>

        <div class="example">
          <div class="title">
            code
          </div>
          <div class="content">
            <ul class="nav nav-tabs">
              <li class="active"><a href="#example-1-html" data-toggle="tab">Html</a></li>
              <li><a href="#example-1-js" data-toggle="tab">JS</a></li>
            </ul>
            <div class="tab-content">
              <div class="tab-pane active" id="example-1-html">
                <pre class="prettyprint lang-html linenums"><%= %`<div id="alerts" class="alerts"></div>
<div id="button" class="m-b-20"></div>
<p><strong>Configuration Modal</strong></p>
<div><input type="text" id="your_name" placeholder="your name" /></div>
<div><input type="text" id="title" placeholder="title modal" /></div>
<div><input type="text" id="ok_click" placeholder="ok click" /></div>
<div><input type="text" id="cancel_click" placeholder="cancel click" /></div>` %></pre>
              </div>
              <div class="tab-pane" id="example-1-js">
                <pre class="prettyprint lang-js linenums"><%= %`jQuery(document).ready(function(){
  var create_modal;
  create_modal = function(){
    var title, name, ok, cancel;
    title = jQuery("#title").val() || "Title default";
    name  = jQuery("#your_name").val() || "Name default";
    new Lol.Modal({
      buttons  : 'OK_CANCEL', // OK | OK_CANCEL | CANCEL | YES_NO
      content  : 'Hello <strong>' + name + '</strong>',
      close    : false,
      title    : title,
      buttonParams: {
        fn: {
          OK_CLICK: function(event, obj){
            new Lol.Alert({
              message: "Handler ok click, with message: " + jQuery("#ok_click").val()
            });
          },
          CANCEL_CLICK: function(event, obj){
            new Lol.Alert({
              type   : "warning",
              message: "Handler cancel click, with message: " + jQuery("#cancel_click").val()
            });
          }
        }
      }
    });
  };
  new Lol.Button({
    text     : "show modal",
    container: "#button",
    callback : {
      click: function(event, object){
        create_modal();
      }
    }
  });
});` %></pre>
              </div>
            </div>
          </div>
        </div>
        <hr />
        <h4 id="all_configurations">All configurations</h4>
        <p>The class of "Modal" has several parameters that can be passed in their time of instantiation. Below you can
          see all of these parameters allowed.</p>
        <pre class="prettyprint lang-js linenums"><%= %`var modal;
modal = new Lol.Modal({
  buttons: false,
  content: null,
  close: true,
  debug: false,
  title: null,
  buttonParams: {},
  callbacks: {
    initialize   : function(object) {},
    buttonClick  : function(button, object) {},
    afterDestroy : function(object) {},
    beforeDestroy: function(object) {}
  },
  containers: {
    buttons: 'lol_modal_buttons',
    close  : 'lol_modal_close',
    content: 'lol_modal_content',
    main   : 'lol_modal_main',
    title  : 'lol_modal_title'
  },
  stylesheets: {
    buttons: {},
    close  : {},
    content: {},
    main   : {},
    title  : {}
  },
  classes: {
    buttons: 'modal-footer',
    close  : 'close',
    content: 'modal-body',
    main   : 'modal hide fade',
    title  : 'modal-header'
  }
});` %></pre>

        <blockquote>
          <strong>buttons</strong> (<code>Boolean</code> | Default: <code>false</code>)
          <p>All objects "Modal" at the bottom may contain an outline of buttons to control actions and conclusions.
            These buttons are created from the class Lol.Button. See the documentation for more details.</p>
        </blockquote>

        <blockquote>
          <strong>content</strong> (<code>String</code> | Default: <code>null</code>)
          <p>String containing the HTML that will be inserted in the body of "Modal".</p>
        </blockquote>

        <blockquote>
          <strong>close</strong> (<code>Boolean</code> | Default: <code>true</code>)
          <p>Sets whether to add the button to close the top of the Modal. Case is false, it is disabled all forms of
            closure Modal somento taking control of buttons added in the footer. The button close to the top, when
            clicked or object created "backdrop", the modal element is taken not put any runs pre configured callback.</p>
        </blockquote>

        <blockquote>
          <strong>debug</strong> (<code>Boolean</code> | Default: <code>false</code>)
          <p>Sets whether the framework should print debug messages to the user.</p>
        </blockquote>

        <blockquote>
          <strong>title</strong> (<code>String</code> | Default: <code>null</code>)
          <p>String containing HTML that is inserted into the top of Modal.</p>
        </blockquote>

        <blockquote>
          <strong>buttonParams</strong> ( <code>Object</code> )
          <p>Object containing the parameters of the buttons, if any is required. See the official documentation.
          <%= link_to :link, js_button_path -%></p>
        </blockquote>

        <blockquote>
          <strong>callbacks</strong> ( <code>Object</code> )
          <p>This object contains functions for callbacks run in actions defined Modal system.</p>

          <blockquote>
            <strong>initialize</strong> (<code>Function</code> | Default: <code>default</code>)
            <p></p>
          </blockquote>

          <blockquote>
            <strong>buttonClick</strong> (<code>Function</code> | Default: <code>default</code>)
            <p></p>
          </blockquote>

          <blockquote>
            <strong>afterDestroy</strong> (<code>Function</code> | Default: <code>default</code>)
            <p></p>
          </blockquote>

          <blockquote>
            <strong>beforeDestroy</strong> (<code>Function</code> | Default: <code>default</code>)
            <p></p>
          </blockquote>
        </blockquote>

        <blockquote>
          <strong>containers</strong> ( <code>Object</code> )
          <p></p>
        </blockquote>

        <blockquote>
          <strong>stylesheets</strong> ( <code>Object</code> )
          <p></p>
        </blockquote>

        <blockquote>
          <strong>classes</strong> ( <code>Object</code> )
          <p></p>
        </blockquote>

        <blockquote>
          <strong>name</strong> (<code>Type</code> | Default: <code>default</code>)
          <p></p>
        </blockquote>

        <hr />
        <h4 id="methods">Methods</h4>
        <p></p>

        <pre class="prettyprint lang-js linenums"><%= %`` %></pre>

        <blockquote>
          <strong>name</strong> ( Receive: <code>Type</code> Returns: <code>Type</code> )
          <p></p>
          <blockquote>
            <pre class="prettyprint linenums lang-js"><%= %`` %></pre>
          </blockquote>
        </blockquote>

        <hr />
        <h4 id="change_defaults">Change Default Configuration</h4>
        <p></p>
        <pre class="prettyprint linenums lang-js"><%= %`` %></pre>
      </div>
    </div>
  </div>
</div>